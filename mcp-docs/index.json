{
  "version": "1.0.0",
  "generated": "2025-06-13T17:47:27.087Z",
  "totalDocuments": 5,
  "categories": {
    "api": [
      {
        "id": "api-time-entries-create",
        "title": "Create Time Entry",
        "path": "api/endpoints/time-entries-create.md",
        "tags": [
          "time-tracking",
          "time-entries",
          "organization"
        ]
      },
      {
        "id": "api-users-list",
        "title": "List Users",
        "path": "api/endpoints/users.md",
        "tags": [
          "users",
          "organization",
          "multi-tenant"
        ]
      },
      {
        "id": "api-overview",
        "title": "Voltasis API Overview",
        "path": "api/overview.md",
        "tags": [
          "overview",
          "getting-started",
          "api"
        ]
      }
    ],
    "guides": [
      {
        "id": "guide-authentication",
        "title": "Authentication Guide",
        "path": "guides/authentication.md",
        "tags": [
          "authentication",
          "security",
          "bearer-token",
          "api-key"
        ]
      },
      {
        "id": "guide-mcp-quickstart",
        "title": "MCP Server Quick Start Guide",
        "path": "guides/mcp-quickstart.md",
        "tags": [
          "mcp",
          "quickstart",
          "cursor",
          "setup",
          "aws"
        ]
      }
    ],
    "reference": []
  },
  "searchIndex": [
    {
      "id": "api-time-entries-create",
      "title": "Create Time Entry",
      "content": "# Create Time Entry  ## Quick Reference - **Method**: POST - **Path**: /api/v1/time-entries - **Authentication**: Required - **Organization Context**: Required  ## Description  Create a new time entry for tracking work performed. Time entries are associated with a user and can optionally be linked to projects, tasks, or clients.  ## Request  ### Headers ```json {   \"Authorization\": \"Bearer {token}\",   \"Content-Type\": \"application/json\" } ```  ### Body Parameters | Name | Type | Required | Descri",
      "category": "api",
      "tags": [
        "time-tracking",
        "time-entries",
        "organization"
      ],
      "weight": 1.5
    },
    {
      "id": "api-users-list",
      "title": "List Users",
      "content": "# List Users  ## Quick Reference - **Method**: GET - **Path**: /api/v1/users - **Authentication**: Required - **Organization Context**: Required  ## Description  Retrieve a paginated list of users within the authenticated user's organization. This endpoint supports filtering, sorting, and pagination to efficiently manage large user lists.  ## Request  ### Headers ```json {   \"Authorization\": \"Bearer {token}\",   \"Content-Type\": \"application/json\" } ```  ### Query Parameters | Name | Type | Requir",
      "category": "api",
      "tags": [
        "users",
        "organization",
        "multi-tenant"
      ],
      "weight": 1.5
    },
    {
      "id": "api-overview",
      "title": "Voltasis API Overview",
      "content": "# Voltasis API Overview  ## Introduction  The Voltasis API provides programmatic access to time tracking and project management functionality. This RESTful API enables you to integrate Voltasis with your own applications and automate workflows.  ## Base URL  All API requests should be made to:  ``` https://api.voltasis.com/v1 ```  ## Authentication  All API requests require authentication using Bearer tokens. Include your API token in the Authorization header:  ``` Authorization: Bearer YOUR_API",
      "category": "api",
      "tags": [
        "overview",
        "getting-started",
        "api"
      ],
      "weight": 1.5
    },
    {
      "id": "guide-authentication",
      "title": "Authentication Guide",
      "content": "# Authentication Guide  ## Overview  The Voltasis API uses Bearer token authentication to secure all endpoints. This guide explains how to authenticate your API requests and manage authentication tokens.  ## Authentication Methods  ### 1. API Key Authentication (Recommended)  API keys are the recommended method for server-to-server communication.  #### Obtaining an API Key  1. Log into your Voltasis account 2. Navigate to **Settings > API Keys** 3. Click **Create New API Key** 4. Give your key a",
      "category": "guide",
      "tags": [
        "authentication",
        "security",
        "bearer-token",
        "api-key"
      ],
      "weight": 1
    },
    {
      "id": "guide-mcp-quickstart",
      "title": "MCP Server Quick Start Guide",
      "content": "# MCP Server Quick Start Guide  ## Overview  This guide will help you get started with the Voltasis MCP (Model Context Protocol) Server in Cursor IDE. The MCP server is hosted on AWS and provides AI-powered assistance for working with the Voltasis API.  ## Prerequisites  - Cursor IDE installed - Node.js 20.x or higher - AWS CLI configured (for administrators only) - Access to the voltasis-mcp-server repository  ## For Users: Connect to Existing AWS Deployment  If the MCP server is already deploy",
      "category": "guide",
      "tags": [
        "mcp",
        "quickstart",
        "cursor",
        "setup",
        "aws"
      ],
      "weight": 1
    }
  ]
}